2025-06-13T18:19:07.286032Z  INFO conjure_oxide::solve: Enabled rule sets: [Constant, Base, Bubble, Minion, Better_AC_Comprehension_Expansion]
2025-06-13T18:19:07.286130Z  INFO file: Rule sets: Constant, Base, Bubble, Minion, Better_AC_Comprehension_Expansion
2025-06-13T18:19:07.286384Z  INFO file: Rules: Rule: constant_evaluator (priority: 9001, from rule set: Constant)
Rule: eval_root (priority: 9001, from rule set: Constant)
Rule: partial_evaluator (priority: 9000, from rule set: Base)
Rule: bubble_up (priority: 8900, from rule set: Bubble)
Rule: expand_bubble (priority: 8900, from rule set: Bubble)
Rule: normalise_associative_commutative (priority: 8900, from rule set: Base)
Rule: eq_to_subset_eq (priority: 8800, from rule set: Base)
Rule: negated_eq_to_neq (priority: 8800, from rule set: Base)
Rule: negated_neq_to_eq (priority: 8800, from rule set: Base)
Rule: normalise_implies_contrapositive (priority: 8800, from rule set: Base)
Rule: normalise_implies_left_distributivity (priority: 8800, from rule set: Base)
Rule: normalise_implies_negation (priority: 8800, from rule set: Base)
Rule: remove_empty_expression (priority: 8800, from rule set: Base)
Rule: remove_unit_vector_and (priority: 8800, from rule set: Base)
Rule: remove_unit_vector_or (priority: 8800, from rule set: Base)
Rule: remove_unit_vector_products (priority: 8800, from rule set: Base)
Rule: remove_unit_vector_sum (priority: 8800, from rule set: Base)
Rule: reorder_product (priority: 8800, from rule set: Base)
Rule: neq_not_eq_sets (priority: 8700, from rule set: Base)
Rule: subset_to_subset_eq_neq (priority: 8700, from rule set: Base)
Rule: subseteq_intersect (priority: 8700, from rule set: Base)
Rule: supset_eq_to_subset_eq (priority: 8700, from rule set: Base)
Rule: supset_to_subset (priority: 8700, from rule set: Base)
Rule: union_subseteq (priority: 8700, from rule set: Base)
Rule: collect_like_terms (priority: 8400, from rule set: Base)
Rule: distribute_negation_over_sum (priority: 8400, from rule set: Base)
Rule: distribute_not_over_and (priority: 8400, from rule set: Base)
Rule: distribute_not_over_or (priority: 8400, from rule set: Base)
Rule: distribute_or_over_and (priority: 8400, from rule set: Base)
Rule: elmininate_double_negation (priority: 8400, from rule set: Base)
Rule: gt_to_geq (priority: 8400, from rule set: Minion)
Rule: lt_to_leq (priority: 8400, from rule set: Minion)
Rule: minus_to_sum (priority: 8400, from rule set: Base)
Rule: normalise_implies_uncurry (priority: 8400, from rule set: Base)
Rule: remove_double_negation (priority: 8400, from rule set: Base)
Rule: simplify_negation_of_product (priority: 8400, from rule set: Base)
Rule: select_representation_matrix (priority: 8001, from rule set: Base)
Rule: record_index_to_bubble (priority: 8000, from rule set: Bubble)
Rule: select_representation (priority: 8000, from rule set: Base)
Rule: tuple_index_to_bubble (priority: 8000, from rule set: Bubble)
Rule: div_to_bubble (priority: 6000, from rule set: Bubble)
Rule: index_to_bubble (priority: 6000, from rule set: Bubble)
Rule: max_to_var (priority: 6000, from rule set: Base)
Rule: min_to_var (priority: 6000, from rule set: Base)
Rule: mod_to_bubble (priority: 6000, from rule set: Bubble)
Rule: pow_to_bubble (priority: 6000, from rule set: Bubble)
Rule: slice_to_bubble (priority: 6000, from rule set: Bubble)
Rule: index_matrix_to_atom (priority: 5000, from rule set: Base)
Rule: substitute_domain_lettings (priority: 5000, from rule set: Base)
Rule: substitute_value_lettings (priority: 5000, from rule set: Base)
Rule: y_plus_k_geq_x_to_ineq (priority: 4800, from rule set: Minion)
Rule: introduce_weighted_sumleq_sumgeq (priority: 4600, from rule set: Minion)
Rule: x_leq_y_plus_k_to_ineq (priority: 4500, from rule set: Minion)
Rule: bool_eq_to_reify (priority: 4400, from rule set: Minion)
Rule: iff_to_eq (priority: 4400, from rule set: Minion)
Rule: introduce_abseq (priority: 4400, from rule set: Minion)
Rule: introduce_element_from_index (priority: 4400, from rule set: Minion)
Rule: introduce_minuseq_from_aux_decl (priority: 4400, from rule set: Minion)
Rule: introduce_minuseq_from_eq (priority: 4400, from rule set: Minion)
Rule: introduce_reifyimply_ineq_from_imply (priority: 4400, from rule set: Minion)
Rule: introduce_wininterval_set_from_indomain (priority: 4400, from rule set: Minion)
Rule: flatten_eq (priority: 4200, from rule set: Minion)
Rule: flatten_generic (priority: 4200, from rule set: Minion)
Rule: flatten_imply (priority: 4200, from rule set: Minion)
Rule: flatten_product (priority: 4200, from rule set: Minion)
Rule: introduce_diveq (priority: 4200, from rule set: Minion)
Rule: introduce_flat_alldiff (priority: 4200, from rule set: Minion)
Rule: introduce_modeq (priority: 4200, from rule set: Minion)
Rule: introduce_poweq (priority: 4200, from rule set: Minion)
Rule: introduce_producteq (priority: 4200, from rule set: Minion)
Rule: geq_to_ineq (priority: 4100, from rule set: Minion)
Rule: leq_to_ineq (priority: 4100, from rule set: Minion)
Rule: not_literal_to_wliteral (priority: 4100, from rule set: Minion)
Rule: not_constraint_to_reify (priority: 4090, from rule set: Minion)
Rule: expand_comprehension_ac (priority: 2001, from rule set: Better_AC_Comprehension_Expansion)
Rule: expand_comprehension (priority: 2000, from rule set: Base)
Rule: index_record_to_atom (priority: 2000, from rule set: Base)
Rule: index_tuple_to_atom (priority: 2000, from rule set: Base)
Rule: matrix_ref_to_atom (priority: 2000, from rule set: Base)
Rule: matrix_to_list (priority: 2000, from rule set: Base)
Rule: record_equality (priority: 2000, from rule set: Base)
Rule: record_to_const (priority: 2000, from rule set: Base)
Rule: slice_matrix_to_atom (priority: 2000, from rule set: Base)
Rule: tuple_equality (priority: 2000, from rule set: Base)
Rule: tuple_inequality (priority: 2000, from rule set: Base)
Rule: tuple_to_constant (priority: 2000, from rule set: Base)
Rule: in_set (priority: 1, from rule set: Base)
2025-06-13T18:19:07.286451Z  INFO file: Input file: colours.eprime
2025-06-13T18:19:07.382827Z  INFO conjure_oxide::solve: extra-rule-checks: enabled
2025-06-13T18:19:07.383118Z TRACE jsonparser: trying to parse domain value: {"Constant":{"ConstantInt":[{"TagInt":[]},1]}}    
2025-06-13T18:19:07.383127Z TRACE jsonparser: .. trying as a positive domain value: {"Constant":{"ConstantInt":[{"TagInt":[]},1]}}    
2025-06-13T18:19:07.383136Z TRACE jsonparser: .. success!    
2025-06-13T18:19:07.383143Z TRACE jsonparser: trying to parse domain value: {"Reference":[{"Name":"n"},null]}    
2025-06-13T18:19:07.383149Z TRACE jsonparser: .. trying as a positive domain value: {"Reference":[{"Name":"n"},null]}    
2025-06-13T18:19:07.383167Z TRACE jsonparser: .. trying as a negative domain value: {"Reference":[{"Name":"n"},null]}    
2025-06-13T18:19:07.383174Z TRACE jsonparser: .. trying as a domain reference: {"Reference":[{"Name":"n"},null]}    
2025-06-13T18:19:07.383181Z TRACE jsonparser: .. found domain reference to n, trying to resolve it    
2025-06-13T18:19:07.383187Z TRACE jsonparser: .. name exists but is not a value letting!    
